## 1
name: Check and deploy

on:
  push:

## 2
jobs:
  ## 3
  build:
     needs: [ setup ]
     runs-on: ubuntu-latest
     env:
       BUSINESS_SHORT_CODE: ${{ secrets.BUSINESS_SHORT_CODE }}
       CALLBACK_URL: ${{ secrets.CALLBACK_URL }}
       PASSKEY: ${{ secrets.PASSKEY }}
       CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
       CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
       MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
       apiKey: ${{ secrets.apiKey }}
     steps:
       # 1
       - name: Checkout code
         uses: actions/checkout@v2

       - run: touch local.properties
       - run: echo -e "\nBUSINESS_SHORT_CODE=$BUSINESS_SHORT_CODE" >> local.properties
       - run: echo -e "\nCALLBACK_URL=$CALLBACK_URL" >> local.properties
       - run: echo -e "\nPASSKEY=$PASSKEY" >> local.properties
       - run: echo -e "\nCONSUMER_SECRET=$CONSUMER_SECRET" >> local.properties
       - run: echo -e "\nCONSUMER_KEY=$CONSUMER_KEY" >> local.properties
       - run: echo -e "\nMAPS_API_KEY=$MAPS_API_KEY" >> local.properties
       - run: echo -e "\napiKey=$apiKey" >> local.properties
       - run: cat local.properties
       # 2
       - name: Generate Release APK
         run: ./gradlew assembleRelease
       # 3
       - name: Sign APK
         uses: r0adkll/sign-android-release@v1
         # ID used to access action output
         id: sign_app
         with:
           releaseDirectory: app/build/outputs/apk/release
           signingKeyBase64: ${{ secrets.SIGNING_KEY }}
           alias: ${{ secrets.ALIAS }}
           keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
           keyPassword: ${{ secrets.KEY_PASSWORD }}
       # 4
       - uses: actions/upload-artifact@master
         with:
           name: release.apk
           path: ${{steps.sign_app.outputs.signedReleaseFile}}
       # 5
       - uses: actions/upload-artifact@master
         with:
           name: mapping.txt
           path: app/build/outputs/mapping/release/mapping.txt

  deploy-firebase:
    # 1
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      # 2
      - uses: actions/download-artifact@master
        with:
          name: release.apk
      #3
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: QA
          file: app-release-unsigned-signed.apk

  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle
